Public Class User

    Public Property UserID As Integer 'Unique UserID
    Public Property UserName As String 'User display name
    Public Property Password As String ' Password to login
    Public Property AccessLevel As UserAccessLevel 'Access level

    Public Shared Function FromLine(line As String) 'Converts from line in file to user data type
        Dim SplitLine As String() = line.Split(",") 'Splits line on commas
        Dim NewUserID As Integer = SplitLine(0) 'Converts ID to integer to add leading zeroes
        Return New User With {.UserID = NewUserID.ToString("00000"), .UserName = SplitLine(1), .Password = SplitLine(2), .AccessLevel = SplitLine(3)} 'Adds user on line to user structure
    End Function

    Public Shared Function CheckValidUser(User As String())
        'User ID is autogenerated and will therefore be valid.
        'Access level is a combo box and will therefore be valid

        If User(1).Length >= 2 Then 'If the user name (without trailing spaces) is more than two characters long. The mask limits it to 20 a-Z characters.
            If Not User(1).Contains(" ") Then 'If the username does not contain any spaces
                If User(2).Length() >= 8 Then 'If the password is 8 or more characters long
                    If Not User(2).Contains(" ") Then 'If the password does not contain any spaces
                        If User(2).IndexOfAny("0123456789") <> -1 Then 'If the password contains one or more numbers
                            If User(2).IndexOfAny("ABCDEFGHIJKLMNOPQRSTUVWXYZ") <> -1 Then 'If the password contains one or more capital letters
                                If User(2).IndexOfAny("!#£$%&()*+,-./:;<=>?@[\]^_`{|}~") <> -1 Then 'If the password contains one or more special characters
                                    Return True
                                Else
                                    ManageUsersWindow.InstructionLabel.Text = "Password must contain at least one special character !#£$%&()*+,-./:;<=>?@[\]^_`{|}~"
                                End If

                            Else
                                ManageUsersWindow.InstructionLabel.Text = "Password must contain at least one capital letter"
                            End If

                        Else
                            ManageUsersWindow.InstructionLabel.Text = "Password must contain at least one number"
                        End If

                    Else
                        ManageUsersWindow.InstructionLabel.Text = "Password must not contain spaces. Leading and trailing spaces will be removed"
                    End If

                Else
                    ManageUsersWindow.InstructionLabel.Text = "Password must be at least 8 characters long."
                End If
            Else
                ManageUsersWindow.InstructionLabel.Text = "Username must not contain spaces. Leading and trailing spaces will be removed"
            End If
        Else
            ManageUsersWindow.InstructionLabel.Text = "Username must be between 2 and 20 characters long "
        End If

        Return False
    End Function

    Public Enum UserAccessLevel 'Data structure containg possible access levels
        Manager 'Can add/remove users, edit product details, view summaries and all user actions
        User 'Can make sales, lookup product details
        None 'No permissions
    End Enum

End Class
